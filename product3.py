# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'product.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import mysql.connector as mc
from PyQt5.QtWidgets import QTableWidgetItem
from PyQt5.QtWidgets import QMessageBox
from PyQt5.QtGui import QStandardItemModel, QStandardItem


class Ui_MainWindow(object):

    DB_CONFIG = {
        "host": "localhost",
        "user": "root",
        "password": "",
        "database": "db_penjualan"
    }
    TABLE_NAME = "product"

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(906, 508)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_1 = QtWidgets.QLabel(self.centralwidget)
        self.label_1.setGeometry(QtCore.QRect(70, 80, 47, 13))
        self.label_1.setObjectName("label_1")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(70, 130, 47, 14))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(70, 180, 47, 14))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(70, 280, 47, 14))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(70, 330, 47, 16))
        self.label_5.setObjectName("label_5")
        self.lineID = QtWidgets.QLineEdit(self.centralwidget)
        self.lineID.setGeometry(QtCore.QRect(160, 80, 171, 20))
        self.lineID.setObjectName("lineID")
        self.lineBarkode = QtWidgets.QLineEdit(self.centralwidget)
        self.lineBarkode.setGeometry(QtCore.QRect(160, 130, 171, 20))
        self.lineBarkode.setObjectName("lineBarkode")
        self.lineName = QtWidgets.QLineEdit(self.centralwidget)
        self.lineName.setGeometry(QtCore.QRect(160, 180, 171, 20))
        self.lineName.setObjectName("lineName")
        self.lineQty = QtWidgets.QLineEdit(self.centralwidget)
        self.lineQty.setGeometry(QtCore.QRect(160, 280, 171, 20))
        self.lineQty.setObjectName("lineQty")
        self.lineHarga = QtWidgets.QLineEdit(self.centralwidget)
        self.lineHarga.setGeometry(QtCore.QRect(160, 330, 171, 20))
        self.lineHarga.setObjectName("lineHarga")
        self.labelResult = QtWidgets.QLabel(self.centralwidget)
        self.labelResult.setGeometry(QtCore.QRect(20, 40, 331, 16))
        font = QtGui.QFont()
        font.setBold(True)
        self.labelResult.setFont(font)
        self.labelResult.setObjectName("labelResult")
        self.btnTambah = QtWidgets.QPushButton(self.centralwidget)
        self.btnTambah.setGeometry(QtCore.QRect(50, 380, 75, 23))
        self.btnTambah.setObjectName("btnTambah")
        self.btnUbah = QtWidgets.QPushButton(self.centralwidget)
        self.btnUbah.setGeometry(QtCore.QRect(160, 380, 75, 23))
        self.btnUbah.setObjectName("btnUbah")
        self.btnHapus = QtWidgets.QPushButton(self.centralwidget)
        self.btnHapus.setGeometry(QtCore.QRect(260, 380, 75, 23))
        self.btnHapus.setObjectName("btnHapus")
        self.btnCari = QtWidgets.QPushButton(self.centralwidget)
        self.btnCari.setGeometry(QtCore.QRect(380, 70, 111, 23))
        self.btnCari.setObjectName("btnCari")
        self.lineCari = QtWidgets.QLineEdit(self.centralwidget)
        self.lineCari.setGeometry(QtCore.QRect(380, 40, 171, 20))
        self.lineCari.setObjectName("lineCari")
        self.tableView = QtWidgets.QTableView(self.centralwidget)
        self.tableView.setGeometry(QtCore.QRect(380, 110, 421, 261))
        self.tableView.setObjectName("tableView")
        self.lineKategori = QtWidgets.QLineEdit(self.centralwidget)
        self.lineKategori.setGeometry(QtCore.QRect(160, 230, 171, 20))
        self.lineKategori.setObjectName("lineKategori")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(70, 230, 51, 21))
        self.label_6.setObjectName("label_6")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 906, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        qr = MainWindow.frameGeometry()
        cp = QtWidgets.QDesktopWidget().availableGeometry().center()
        qr.moveCenter(cp)
        MainWindow.move(qr.topLeft())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def execute_query(self, query, values=None, fetch=False):
            try:
                mydb = mc.connect(**self.DB_CONFIG)
                cursor = mydb.cursor()
            
                if values:
                    cursor.execute(query, values)
                else:
                    cursor.execute(query)
                
                if fetch:
                    result = cursor.fetchall()
                    mydb.commit()
                    return result
                
                mydb.commit()
                return True
            
            except mc.Error as e:
                self.labelResult.setText(f"Database error: {str(e)}")
                return None
            
            finally:
                if 'mydb' in locals():
                    mydb.close()

    def loadData(self):
        query = f"SELECT * FROM {self.TABLE_NAME} ORDER BY id ASC"
        result = self.execute_query(query, fetch=True)
        
        if result:
            model = QStandardItemModel()
            model.setHorizontalHeaderLabels(['ID', 'Barkode', 'Nama', 'Kategori', 'Jumlah', 'Harga'])
            
        for row_data in result:
            items = [QStandardItem(str(data)) for data in row_data]
            model.appendRow(items)
            
            self.tableView.setModel(model)
        else:
            self.labelResult.setText("Tidak ada data untuk ditampilkan")

    def clearForm(self):
        self.lineID.clear()
        self.lineBarkode.clear()
        self.lineName.clear()
        self.lineKategori.clear()
        self.lineQty.clear()
        self.lineHarga.clear()

    def insertData(self):
        try:
            id = self.lineID.text()
            barkode = self.lineBarkode.text()
            name = self.lineName.text()
            kategori = self.lineKategori.text()
            qty = self.lineQty.text()
            harga = self.lineHarga.text()
                
            if not all([id, barkode, name, kategori, qty, harga]):
                self.labelResult.setText("Semua field harus diisi!")
                return
                    
            query = f"INSERT INTO {self.TABLE_NAME} (id, barkode, name, kategori, qty, harga) VALUES (%s, %s, %s, %s, %s, %s)"
            values = (id, barkode, name, kategori, qty, harga)
                
            if self.execute_query(query, values):
                self.labelResult.setText("Data Berhasil Disimpan")
                self.clearForm()
                self.loadData()
                    
        except Exception as e:
            self.labelResult.setText(f"Error: {str(e)}")

    def updateData(self):
        try:
            id = self.lineID.text()
            barkode = self.lineBarkode.text()
            name = self.lineName.text()
            kategori = self.lineKategori.text()
            qty = self.lineQty.text()
            harga = self.lineHarga.text()
                
            if not all([id, barkode, name, kategori, qty, harga]):
                self.labelResult.setText("Semua field harus diisi!")
                return
                    
            query = f"UPDATE {self.TABLE_NAME} SET barkode=%s, name=%s, kategori=%s, qty=%s, harga=%s WHERE id=%s"
            values = (barkode, name, kategori, qty, harga, id)
                
            if self.execute_query(query, values):
                self.labelResult.setText("Data Berhasil Diupdate")
                self.clearForm()
                self.loadData()
                    
        except Exception as e:
            self.labelResult.setText(f"Error: {str(e)}")

    def deleteData(self):
        try:
            id = self.lineID.text()
                
            if not id:
                self.labelResult.setText("Pilih data yang akan dihapus!")
                return
                    
            confirm = QMessageBox.question(None, "Konfirmasi Hapus", 
                                        "Apakah Anda yakin ingin menghapus data ini?",
                                        QMessageBox.Yes | QMessageBox.No)
                                            
            if confirm == QMessageBox.Yes:
                query = f"DELETE FROM {self.TABLE_NAME} WHERE id=%s"
                if self.execute_query(query, (id,)):
                    self.labelResult.setText("Data Berhasil Dihapus")
                    self.clearForm()
                    self.loadData()
                        
        except Exception as e:
            self.labelResult.setText(f"Error: {str(e)}")
                
    def searchData(self):
        try:
            search_text = self.lineCari.text()
            
            if not search_text:
                self.loadData()  # Jika input kosong, tampilkan semua data
                return
                
            query = f"SELECT * FROM {self.TABLE_NAME} WHERE name LIKE %s"
            values = (f"%{search_text}%",)
            
            result = self.execute_query(query, values, fetch=True)
            if result:
                model = QStandardItemModel()
                model.setHorizontalHeaderLabels(['ID', 'Barkode', 'Nama', 'Kategori', 'Jumlah', 'Harga'])
                
                for row_data in result:
                    items = [QStandardItem(str(data)) for data in row_data]
                    model.appendRow(items)
                
                self.tableView.setModel(model)  # Set hasil pencarian ke tabel
                self.labelResult.setText(f"Ditemukan {len(result)} data")  # Pesan jika data ditemukan
            else:
                    self.labelResult.setText("Data tidak ditemukan")  # Pesan jika tidak ada data
            
        except Exception as e:
            self.labelResult.setText(f"Error: {str(e)}")


        
    def onTableClicked(self, index):
        """Mengisi data dari baris yang diklik ke input form."""
        if index.isValid():
            model = self.tableView.model()
            row = index.row()
            
        self.lineID.setText(model.item(row, 0).text())
        self.lineBarkode.setText(model.item(row, 1).text())
        self.lineName.setText(model.item(row, 2).text())
        self.lineKategori.setText(model.item(row, 3).text())
        self.lineQty.setText(model.item(row, 4).text())
        self.lineHarga.setText(model.item(row, 5).text())

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_1.setText(_translate("MainWindow", "ID"))
        self.label_2.setText(_translate("MainWindow", "Barkode"))
        self.label_3.setText(_translate("MainWindow", "Nama"))
        self.label_4.setText(_translate("MainWindow", "Jumlah"))
        self.label_5.setText(_translate("MainWindow", "Harga"))
        self.labelResult.setText(_translate("MainWindow", "Selamat Datang"))
        self.btnTambah.setText(_translate("MainWindow", "INSERT"))
        self.btnUbah.setText(_translate("MainWindow", "UPDATE"))
        self.btnHapus.setText(_translate("MainWindow", "DELETE"))
        self.btnCari.setText(_translate("MainWindow", "SEARCH"))
        self.lineCari.setPlaceholderText(_translate("MainWindow", "Search..."))
        self.label_6.setText(_translate("MainWindow", "Kategori"))

        self.btnTambah.clicked.connect(self.insertData)
        self.btnUbah.clicked.connect(self.updateData)
        self.btnHapus.clicked.connect(self.deleteData)
        self.btnCari.clicked.connect(self.searchData)
        self.tableView.clicked.connect(self.onTableClicked)

        self.loadData()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
